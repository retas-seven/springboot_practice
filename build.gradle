buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.tuyano.springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

// for Doma 2
// JavaクラスとSQLファイルの出力先ディレクトリを同じにする
processResources.destinationDir = compileJava.destinationDir
// コンパイルより前にSQLファイルを出力先ディレクトリにコピーするために依存関係を逆転する
compileJava.dependsOn processResources

repositories {
	mavenCentral()
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

configurations {
    domaGenRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile 'org.seasar.doma:doma:2.19.2'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	domaGenRuntime 'org.seasar.doma:doma-gen:2.19.2'
    domaGenRuntime 'mysql:mysql-connector-java:5.1.40'
	
	// DB
	compile('org.seasar.doma.boot:doma-spring-boot-starter:1.1.1')
	compile 'mysql:mysql-connector-java:5.1.40'
}

task domaGen {
    def basePackage = 'com.tuyano.springboot'

    ant.taskdef(resource: 'domagentask.properties',classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url:'jdbc:mysql://localhost:3306/test01', user:'test01_user', password:'test01_user!') {
        entityConfig(packageName:"${basePackage}.entity", useAccessor:false, useListener:false)
        daoConfig(packageName:"${basePackage}.dao", overwrite:false)
        sqlConfig()
    }
}
